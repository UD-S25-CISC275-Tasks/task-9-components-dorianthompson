{"ast":null,"code":"var _jsxFileName = \"/Users/dorianthompson2/CISC275/task-9-components-dorianthompson/src/components/TwoDice.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\n/**\n * Here is a helper function you *must* use to \"roll\" your die.\n * The function uses the builtin `random` function of the `Math`\n * module (which returns a random decimal between 0 up until 1) in order\n * to produce a random integer between 1 and 6 (inclusive).\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function d6() {\n  return 1 + Math.floor(Math.random() * 6);\n}\nexport function TwoDice() {\n  _s();\n  const [diceOne, setDiceOne] = useState(3);\n  const [diceTwo, setDiceTwo] = useState(5);\n  const handleDiceOneRoll = () => {\n    setDiceOne(d6());\n  };\n  const handleDiceTwoRoll = () => {\n    setDiceTwo(d6());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      \"data-testid\": \"left-die\",\n      children: diceOne\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleDiceOneRoll,\n      value: \"Roll Left\",\n      children: \"Roll Left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      \"data-testid\": \"right-die\",\n      children: diceTwo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleDiceTwoRoll,\n      value: \"Roll Right\",\n      children: \"Roll Right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), diceOne === diceTwo && diceOne === 1 && \"Lose\", diceOne === diceTwo && diceOne !== 1 && \"Win\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(TwoDice, \"GGn3VWSbxCqCqlQivTRIoZVMBz0=\");\n_c = TwoDice;\nvar _c;\n$RefreshReg$(_c, \"TwoDice\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","d6","Math","floor","random","TwoDice","_s","diceOne","setDiceOne","diceTwo","setDiceTwo","handleDiceOneRoll","handleDiceTwoRoll","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","_c","$RefreshReg$"],"sources":["/Users/dorianthompson2/CISC275/task-9-components-dorianthompson/src/components/TwoDice.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\n/**\n * Here is a helper function you *must* use to \"roll\" your die.\n * The function uses the builtin `random` function of the `Math`\n * module (which returns a random decimal between 0 up until 1) in order\n * to produce a random integer between 1 and 6 (inclusive).\n */\nexport function d6(): number {\n    return 1 + Math.floor(Math.random() * 6);\n}\n\nexport function TwoDice(): React.JSX.Element {\n    const [diceOne, setDiceOne] = useState<number>(3);\n    const [diceTwo, setDiceTwo] = useState<number>(5);\n    const handleDiceOneRoll = () => {\n        setDiceOne(d6());\n    };\n    const handleDiceTwoRoll = () => {\n        setDiceTwo(d6());\n    };\n    return (\n        <div>\n            <span data-testid=\"left-die\">{diceOne}</span>\n            <Button onClick={handleDiceOneRoll} value=\"Roll Left\">\n                Roll Left\n            </Button>\n            <span data-testid=\"right-die\">{diceTwo}</span>\n            <Button onClick={handleDiceTwoRoll} value=\"Roll Right\">\n                Roll Right\n            </Button>\n            {diceOne === diceTwo && diceOne === 1 && \"Lose\"}\n            {diceOne === diceTwo && diceOne !== 1 && \"Win\"}\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,iBAAiB;;AAExC;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,OAAO,SAASC,EAAEA,CAAA,EAAW;EACzB,OAAO,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;AAC5C;AAEA,OAAO,SAASC,OAAOA,CAAA,EAAsB;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAS,CAAC,CAAC;EACjD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAS,CAAC,CAAC;EACjD,MAAMc,iBAAiB,GAAGA,CAAA,KAAM;IAC5BH,UAAU,CAACP,EAAE,CAAC,CAAC,CAAC;EACpB,CAAC;EACD,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC5BF,UAAU,CAACT,EAAE,CAAC,CAAC,CAAC;EACpB,CAAC;EACD,oBACID,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAM,eAAY,UAAU;MAAAa,QAAA,EAAEN;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC7CjB,OAAA,CAACF,MAAM;MAACoB,OAAO,EAAEP,iBAAkB;MAACQ,KAAK,EAAC,WAAW;MAAAN,QAAA,EAAC;IAEtD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjB,OAAA;MAAM,eAAY,WAAW;MAAAa,QAAA,EAAEJ;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC9CjB,OAAA,CAACF,MAAM;MAACoB,OAAO,EAAEN,iBAAkB;MAACO,KAAK,EAAC,YAAY;MAAAN,QAAA,EAAC;IAEvD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRV,OAAO,KAAKE,OAAO,IAAIF,OAAO,KAAK,CAAC,IAAI,MAAM,EAC9CA,OAAO,KAAKE,OAAO,IAAIF,OAAO,KAAK,CAAC,IAAI,KAAK;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd;AAACX,EAAA,CAvBeD,OAAO;AAAAe,EAAA,GAAPf,OAAO;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}